{
  "openapi": "3.0.0",
  "info": {
    "title": "Sample CRUD API",
    "version": "1.0.0",
    "description": "A simple API to demonstrate CRUD operations"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "paths": {
    "/items": {
      "get": {
        "summary": "Retrieve all items",
        "responses": {
          "200": {
            "description": "A list of items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new item",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          }
        }
      }
    },
    "/items/{itemId}": {
      "get": {
        "summary": "Retrieve a specific item",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The ID of the item to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "Item not found"
          }
        }
      },
      "put": {
        "summary": "Update a specific item",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The ID of the item to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "Item not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific item",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "The ID of the item to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted"
          },
          "404": {
            "description": "Item not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Item": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the item",
            "example": "1"
          },
          "name": {
            "type": "string",
            "description": "The name of the item",
            "example": "Sample Item"
          },
          "description": {
            "type": "string",
            "description": "A description of the item",
            "example": "This is a sample item."
          }
        }
      }
    }
  }
}
